{"version":3,"sources":["svg/ash.svg","svg/clear-day.svg","svg/clear-night.svg","svg/clouds.svg","svg/cloudy.svg","svg/humidity.svg","svg/mist.svg","svg/pressure.svg","svg/rain.svg","svg/sand.svg","svg/sunrise.svg","svg/sunset.svg","svg/snow.svg","svg/thunderstorm.svg","svg/tornado.svg","svg/wind.svg","svg/alert.svg","svg/info.svg","images/logo512.png","svg/co2.svg","components/Container/Container.js","components/HomeButton/HomeButton.js","components/Loading/Loading.js","utils/fetch.js","components/AlertsPage/AlertsPage.js","utils/formatTimeFromUnix.js","utils/isDay.js","utils/getImage.js","components/DetailsItem/DetailsItem.js","components/DetailsPage/DetailsPage.js","components/Footer/Footer.js","components/Header/Header.js","components/Nav/Nav.js","components/PollutionPage/PollutionPage.js","components/Searchbar/Searchbar.js","components/SideMenuButton/SideMenuButton.js","components/SideMenu/SideMenu.js","components/WeatherItem/WeatherItem.js","components/WeatherHourly/WeatherHourly.js","components/WeatherSection/WeatherSection.js","utils/getProperConditon.js","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","HomeButton","history","useHistory","onClick","push","Loading","fetchWeather","location","lat","lng","URL","fetch","then","response","ok","Error","status","res","json","data","catch","e","message","fetchWeatherAlerts","signal","alerts","fetchWeatherHourly","hourly","AlertsPage","useState","alert","setAlert","isLoading","setIsLoading","err","setErr","useEffect","abortController","AbortController","a","weatherAlertsData","description","fetchWeatherAlertsData","abort","formatTimeFromUnix","unixTime","Date","toLocaleTimeString","hour","minute","isDay","sunrise","sunset","sunriseInMiliseconds","sunsetInMiliseconds","currentTime","now","weatherImages","ash","clearDay","clearNight","clouds","cloudy","humidity","mist","pressure","rain","sand","snow","thunderstorm","tornado","wind","getProperImage","conditions","sunRise","sunSet","includes","DetailsItem","value","title","icon","displayedValue","suffix","src","alt","DetailsPage","props","detailsArray","Object","entries","map","key","Footer","href","Header","city","handleFavouriteCitiesChange","day","toLocaleDateString","undefined","weekday","time","Boolean","console","log","cityLocation","cityStorage","localStorage","getItem","dataToSave","JSON","stringify","Array","of","setItem","parse","Nav","properCondition","to","pollution","details","logo","PollutionPage","style","alignSelf","Searchbar","handleInputChange","handleSubmit","type","placeholder","onChange","SideMenuButton","toggleMenu","SideMenu","favouriteCities","getWeather","isOpen","setIsOpen","prevState","openedSideMenu","openedSidePanel","id","filter","index","handleRemoveFromStorage","WeatherItem","itemWeather","dt","temp","main","weather","weatherImg","toLowerCase","formatedHour","toFixed","WeatherHourly","hourlyWeather","outerWrapper","document","querySelector","innerWrapper","item","buttonLeft","buttonRight","fromLeft","offsetLeft","itemWidth","clientWidth","maxFromLeftPosition","offsetWidth","getBoundingClientRect","width","display","left","currentMovedWidth","innerWrapperWidth","WeatherSection","max","min","mistConditions","sandConditions","rainConditions","App","state","maxTemp","minTemp","conditionsDescription","errMessage","target","setState","preventDefault","weatherData","all","coord","lon","temp_max","temp_min","name","sys","speed","Number","hourlyWeatherData","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","this","conditon","getProperCondition","exact","path","component","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.372046e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ash.a3e50ba0.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-day.51456abb.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-night.6c056b1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/clouds.a406d4cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.bf903809.svg\";","module.exports = __webpack_public_path__ + \"static/media/humidity.bdc37673.svg\";","module.exports = __webpack_public_path__ + \"static/media/mist.54db94da.svg\";","module.exports = __webpack_public_path__ + \"static/media/pressure.f3cd1f75.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.b589da9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/sand.696d5fbd.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunrise.c0fbb328.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunset.fe40a936.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.9a8b79ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm.2d467c0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/tornado.7ce771c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.783796b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/alert.c5038101.svg\";","module.exports = __webpack_public_path__ + \"static/media/info.11cd1576.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo512.da3104aa.png\";","module.exports = __webpack_public_path__ + \"static/media/co2.03c1a884.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => {\r\n\treturn <section className='container'>{children}</section>;\r\n};\r\n\r\nContainer.propTypes = {\r\n\tchildren: PropTypes.array,\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport './HomeButton.css';\r\n\r\nconst HomeButton = () => {\r\n\tconst history = useHistory();\r\n\r\n\tconst handleGoHomeClick = () => {\r\n\t\thistory.push('/');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<button className='home-button' onClick={handleGoHomeClick}>\r\n\t\t\t<i className='fas fa-arrow-left'></i> Home\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default HomeButton;\r\n","import React from 'react';\r\n\r\nconst Loading = () => {\r\n\treturn <div>Loading...</div>;\r\n};\r\n\r\nexport default Loading;\r\n","export const fetchWeather = (location = 'Warsaw', lat, lng) => {\r\n\tlet URL = `https://weather-app-dyrpit.herokuapp.com/weather?location=${location}`;\r\n\tif (lat && lng) {\r\n\t\tURL = `https://weather-app-dyrpit.herokuapp.com/weather?lat=${lat}&lng=${lng}`;\r\n\t}\r\n\r\n\treturn fetch(URL)\r\n\t\t.then((response) => {\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(response.status);\r\n\t\t\t}\r\n\t\t\treturn response;\r\n\t\t})\r\n\t\t.then((res) => res.json())\r\n\t\t.then((data) => {\r\n\t\t\treturn data;\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\tif (e.message === '400') {\r\n\t\t\t\tthrow new Error('City not found');\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error(e.message);\r\n\t\t});\r\n};\r\n\r\nexport const fetchWeatherAlerts = (lat, lng, signal) => {\r\n\tconst URL = `https://weather-app-dyrpit.herokuapp.com/weather/alerts?lat=${lat}&lng=${lng}`;\r\n\treturn fetch(URL, signal)\r\n\t\t.then((response) => {\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(response.status);\r\n\t\t\t}\r\n\t\t\treturn response;\r\n\t\t})\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((res) => {\r\n\t\t\tconst { alerts } = res;\r\n\t\t\tif (!alerts) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn alerts[0];\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\tif (e.message === '400') {\r\n\t\t\t\tthrow new Error('No alerts for this city');\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error(e.message);\r\n\t\t});\r\n};\r\n\r\nexport const fetchWeatherHourly = (lat, lng) => {\r\n\tconst URL = `https://weather-app-dyrpit.herokuapp.com/weather/hourly?lat=${lat}&lng=${lng}`;\r\n\treturn fetch(URL)\r\n\t\t.then((response) => {\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(response.status);\r\n\t\t\t}\r\n\t\t\treturn response;\r\n\t\t})\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((res) => {\r\n\t\t\tconst { hourly } = res;\r\n\t\t\tif (!hourly) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn hourly;\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\tif (e.message === '400') {\r\n\t\t\t\tthrow new Error('No hourly weather for this city');\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error(e.message);\r\n\t\t});\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Container from '../Container/Container';\r\nimport HomeButton from '../HomeButton/HomeButton';\r\nimport Loading from '../Loading/Loading';\r\n\r\nimport { fetchWeatherAlerts } from '../../utils/fetch';\r\n\r\nimport './AlertsPage.css';\r\n\r\nconst AlertsPage = ({ lat, lng }) => {\r\n\tconst [alert, setAlert] = useState('');\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [err, setErr] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst abortController = new AbortController();\r\n\r\n\t\tconst fetchWeatherAlertsData = async (lat, lng) => {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\ttry {\r\n\t\t\t\tconst weatherAlertsData = await fetchWeatherAlerts(lat, lng, {\r\n\t\t\t\t\tsignal: abortController.signal,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetIsLoading(false);\r\n\r\n\t\t\t\tif (!weatherAlertsData || !weatherAlertsData.description) {\r\n\t\t\t\t\tsetAlert('No weather alerts');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetAlert(weatherAlertsData.description);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetErr(e.message);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchWeatherAlertsData(lat, lng);\r\n\r\n\t\treturn () => {\r\n\t\t\tabortController.abort();\r\n\t\t};\r\n\t}, [lat, lng]);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<HomeButton />\r\n\t\t\t<div className='alerts-section'>\r\n\t\t\t\t{isLoading ? <Loading /> : <p className='alerts-section__description'>{err || alert}</p>}\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nAlertsPage.propTypes = {\r\n\tlat: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\tlng: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nexport default AlertsPage;\r\n","export const formatTimeFromUnix = (unixTime) => {\r\n\tconst timeInMiliseconds = unixTime * 1000;\r\n\tconst time = new Date(timeInMiliseconds).toLocaleTimeString([], {\r\n\t\thour: '2-digit',\r\n\t\tminute: '2-digit',\r\n\t});\r\n\r\n\treturn time;\r\n};\r\n","export const isDay = (sunrise, sunset) => {\r\n\tif (!sunrise || !sunset) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tconst sunriseInMiliseconds = sunrise * 1000;\r\n\tconst sunsetInMiliseconds = sunset * 1000;\r\n\tconst currentTime = Date.now();\r\n\r\n\treturn currentTime < sunsetInMiliseconds && currentTime > sunriseInMiliseconds ? true : false;\r\n};\r\n","import ash from '../svg/ash.svg';\r\nimport clearDay from '../svg/clear-day.svg';\r\nimport clearNight from '../svg/clear-night.svg';\r\nimport clouds from '../svg/clouds.svg';\r\nimport cloudy from '../svg/cloudy.svg';\r\nimport humidity from '../svg/humidity.svg';\r\nimport mist from '../svg/mist.svg';\r\nimport pressure from '../svg/pressure.svg';\r\nimport rain from '../svg/rain.svg';\r\nimport sand from '../svg/sand.svg';\r\nimport sunrise from '../svg/sunrise.svg';\r\nimport sunset from '../svg/sunset.svg';\r\nimport snow from '../svg/snow.svg';\r\nimport thunderstorm from '../svg/thunderstorm.svg';\r\nimport tornado from '../svg/tornado.svg';\r\nimport wind from '../svg/wind.svg';\r\n\r\nimport { isDay } from './isDay';\r\n\r\nconst weatherImages = {\r\n\tash,\r\n\tclearDay,\r\n\tclearNight,\r\n\tclouds,\r\n\tcloudy,\r\n\thumidity,\r\n\tmist,\r\n\tpressure,\r\n\train,\r\n\tsand,\r\n\tsnow,\r\n\tsunrise,\r\n\tsunset,\r\n\tthunderstorm,\r\n\ttornado,\r\n\twind,\r\n};\r\n\r\nexport const getProperImage = (conditions, sunRise, sunSet) => {\r\n\tif (conditions.includes('clear')) {\r\n\t\treturn isDay(sunRise, sunSet) ? weatherImages['clearDay'] : weatherImages['clearNight'];\r\n\t} else {\r\n\t\treturn weatherImages[conditions];\r\n\t}\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { formatTimeFromUnix } from '../../utils/formatTimeFromUnix';\r\nimport { getProperImage } from '../../utils/getImage';\r\n\r\nimport './DetailsItem.css';\r\n\r\nconst DetailsItem = ({ value, title }) => {\r\n\tconst icon = getProperImage(title);\r\n\tlet displayedValue = value;\r\n\tlet suffix = '';\r\n\r\n\tif (title === 'wind') {\r\n\t\tsuffix = ' km/h';\r\n\t} else if (title === 'humidity' || title === 'cloudy') {\r\n\t\tsuffix = '%';\r\n\t} else if (title === 'sunrise' || title === 'sunset') {\r\n\t\tdisplayedValue = formatTimeFromUnix(value);\r\n\t} else if (title === 'pressure') {\r\n\t\tsuffix = ' hPa';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<section className='details-section'>\r\n\t\t\t<div className='details-section__item'>\r\n\t\t\t\t<img className='details-section__img' src={icon} alt={title} />\r\n\t\t\t\t<span className='details-section__title'>{title}</span>\r\n\t\t\t\t<p className='details-section__value'>\r\n\t\t\t\t\t{displayedValue}\r\n\t\t\t\t\t{suffix}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nDetailsItem.propTypes = {\r\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\ttitle: PropTypes.string,\r\n};\r\n\r\nexport default DetailsItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Container from '../Container/Container';\r\nimport DetailsItem from '../DetailsItem/DetailsItem';\r\nimport HomeButton from '../HomeButton/HomeButton';\r\n\r\nimport './DetailsPage.css';\r\n\r\nconst DetailsPage = (props) => {\r\n\tconst detailsArray = Object.entries(props);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<HomeButton />\r\n\t\t\t{detailsArray.map(([title, value]) => (\r\n\t\t\t\t<DetailsItem key={title} value={value} title={title} />\r\n\t\t\t))}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nDetailsPage.propTypes = {\r\n\tprops: PropTypes.object,\r\n};\r\n\r\nexport default DetailsPage;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer className='footer'>\r\n\t\t\t<div className='footer__copyright'>\r\n\t\t\t\t<p className='footer__made-by'>Piotr Dyrda &copy;</p>\r\n\t\t\t</div>\r\n\t\t\t<div className='footer__credits'>\r\n\t\t\t\tIcons made by{' '}\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName='footer__link'\r\n\t\t\t\t\thref='https://www.flaticon.com/authors/vitaly-gorbachev'\r\n\t\t\t\t\ttitle='Vitaly Gorbachev'\r\n\t\t\t\t>\r\n\t\t\t\t\tVitaly Gorbachev\r\n\t\t\t\t</a>{' '}\r\n\t\t\t\tand{' '}\r\n\t\t\t\t<a className='footer__link' href='https://www.freepik.com' title='Freepik'>\r\n\t\t\t\t\tFreepik\r\n\t\t\t\t</a>{' '}\r\n\t\t\t\tfrom{' '}\r\n\t\t\t\t<a className='footer__link' href='https://www.flaticon.com/' title='Flaticon'>\r\n\t\t\t\t\twww.flaticon.com\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Loading from '../Loading/Loading';\r\n\r\nimport './Header.css';\r\n\r\nconst Header = ({ city, err, isLoading, handleFavouriteCitiesChange, lat, lng }) => {\r\n\tconst day = new Date().toLocaleDateString(undefined, {\r\n\t\tweekday: 'short',\r\n\t});\r\n\r\n\tconst time = new Date().toLocaleTimeString([], {\r\n\t\thour: '2-digit',\r\n\t\tminute: '2-digit',\r\n\t});\r\n\r\n\tconst handleAddToStorage = () => {\r\n\t\tconsole.log(city, lng, lat);\r\n\t\tconst cityLocation = {\r\n\t\t\tcity,\r\n\t\t\tlng,\r\n\t\t\tlat,\r\n\t\t};\r\n\r\n\t\tconst cityStorage = localStorage.getItem('cities');\r\n\r\n\t\tif (!cityStorage) {\r\n\t\t\tconst dataToSave = JSON.stringify(Array.of(cityLocation));\r\n\t\t\tlocalStorage.setItem('cities', dataToSave);\r\n\t\t\thandleFavouriteCitiesChange(dataToSave);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst data = JSON.parse(cityStorage);\r\n\t\tdata.push(cityLocation);\r\n\t\tlocalStorage.setItem('cities', JSON.stringify(data));\r\n\t\thandleFavouriteCitiesChange(data);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<header className='header'>\r\n\t\t\t<div className='header__container'>\r\n\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t<Loading />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='header__container header__container--row'>\r\n\t\t\t\t\t\t\t<p className='header__city-name'>{err || city}</p>\r\n\t\t\t\t\t\t\t{Boolean(err) || (\r\n\t\t\t\t\t\t\t\t<div onClick={handleAddToStorage} className='header__add-button'>\r\n\t\t\t\t\t\t\t\t\t<i className='fas fa-plus add-button__icon'></i>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p className='header__date'>\r\n\t\t\t\t\t\t\t{day}, {time}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nHeader.propTypes = {\r\n\tcity: PropTypes.string,\r\n\terr: PropTypes.string,\r\n\tisLoading: PropTypes.bool,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport alert from '../../svg/alert.svg';\r\nimport details from '../../svg/info.svg';\r\nimport logo from '../../images/logo512.png';\r\nimport pollution from '../../svg/co2.svg';\r\n\r\nimport './Nav.css';\r\n\r\nconst Nav = ({ properCondition }) => {\r\n\treturn (\r\n\t\t<nav className={`menu ${properCondition}`}>\r\n\t\t\t<ul className='menu__list'>\r\n\t\t\t\t<li className='menu__item'>\r\n\t\t\t\t\t<Link className='menu__link' to='/pollution'>\r\n\t\t\t\t\t\t<img className='menu__image' src={pollution} alt='pollution menu icon' />\r\n\t\t\t\t\t\t<p className='menu__name'>Air Pollution</p>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className='menu__item'>\r\n\t\t\t\t\t<Link className='menu__link' to='/details'>\r\n\t\t\t\t\t\t<img className='menu__image' src={details} alt='details menu icon' />\r\n\t\t\t\t\t\t<p className='menu__name'>Details</p>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className='menu__item'>\r\n\t\t\t\t\t<Link className='menu__link' to='/alerts'>\r\n\t\t\t\t\t\t<img className='menu__image' src={alert} alt='alert menu icon' />\r\n\t\t\t\t\t\t<p className='menu__name'>Alerts</p>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t<div className='menu__logo'>\r\n\t\t\t\t<img className='logo__image' src={logo} alt='logo' />\r\n\t\t\t\t<span className='logo__title'>Small weather app</span>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nNav.propTypes = {\r\n\tproperCondition: PropTypes.string,\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport Container from '../Container/Container';\r\n\r\nconst PollutionPage = () => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<p style={{ alignSelf: 'center' }}>Under construction</p>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default PollutionPage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Searchbar.css';\r\n\r\nconst Searchbar = ({ handleInputChange, value, handleSubmit }) => {\r\n\treturn (\r\n\t\t<form className='search'>\r\n\t\t\t<input\r\n\t\t\t\tclassName='search__input'\r\n\t\t\t\ttype='text'\r\n\t\t\t\tplaceholder='Type city'\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t></input>\r\n\t\t\t<button className='search__btn' onClick={handleSubmit}>\r\n\t\t\t\t<i className='fas fa-search'></i>\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nSearchbar.propTypes = {\r\n\thandleInputChange: PropTypes.func,\r\n\thandleSubmit: PropTypes.func,\r\n\tvalue: PropTypes.string,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SideMenuButton.css';\r\n\r\nconst SideMenuButton = ({ toggleMenu }) => {\r\n\treturn (\r\n\t\t<div onClick={toggleMenu} className='side-menu-button'>\r\n\t\t\t{/* <i className='fas fa-bars side-menu-button__icon'></i> */}\r\n\t\t\t<i className='fas fa-ellipsis-v side-menu-button__icon'></i>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSideMenuButton.propTypes = {\r\n\ttoggleMenu: PropTypes.func,\r\n};\r\n\r\nexport default SideMenuButton;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SideMenuButton from '../SideMenuButton/SideMenuButton';\r\n\r\nimport './SideMenu.css';\r\n\r\nconst SideMenu = ({ favouriteCities, getWeather, handleFavouriteCitiesChange }) => {\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\r\n\tconst toggleMenu = () => {\r\n\t\tsetIsOpen((prevState) => !prevState);\r\n\t};\r\n\r\n\tconst handleRemoveFromStorage = (id) => {\r\n\t\tlet favouriteCities = JSON.parse(localStorage.getItem('cities'));\r\n\t\tconsole.log(id);\r\n\r\n\t\tfavouriteCities = favouriteCities.filter((city, index) => index !== id);\r\n\r\n\t\tlocalStorage.setItem('cities', JSON.stringify(favouriteCities));\r\n\t\thandleFavouriteCitiesChange(favouriteCities);\r\n\t};\r\n\r\n\tconst openedSideMenu = isOpen ? 'side-menu--is-open' : '';\r\n\tconst openedSidePanel = isOpen ? 'side-menu__panel--is-open' : '';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='side-menu'>\r\n\t\t\t\t<div onClick={toggleMenu} className={`side-menu__background ${openedSideMenu}`}></div>\r\n\t\t\t\t{/* onClick={toggleMenu} */}\r\n\t\t\t\t<div className={`side-menu__panel ${openedSidePanel}`}>\r\n\t\t\t\t\t<div className='settings'>\r\n\t\t\t\t\t\t<i className='fas fa-cog settings__icon'></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3 className='panel__title'>Favourite locations</h3>\r\n\t\t\t\t\t<ul className='panel__city-list'>\r\n\t\t\t\t\t\t{favouriteCities &&\r\n\t\t\t\t\t\t\tfavouriteCities.map(({ city, lat, lng }, id) => (\r\n\t\t\t\t\t\t\t\t<div key={city + id}>\r\n\t\t\t\t\t\t\t\t\t<p onClick={() => getWeather(city, lat, lng)}>{city}</p>\r\n\t\t\t\t\t\t\t\t\t<p onClick={() => handleRemoveFromStorage(id)}>\r\n\t\t\t\t\t\t\t\t\t\t<i className='far fa-trash-alt'></i>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<SideMenuButton toggleMenu={toggleMenu} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nSideMenu.propTypes = {\r\n\tfavouriteCities: PropTypes.array,\r\n\tgetWeather: PropTypes.func,\r\n\thandleFavouriteCitiesChange: PropTypes.func,\r\n};\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { formatTimeFromUnix } from '../../utils/formatTimeFromUnix';\r\nimport { getProperImage } from '../../utils/getImage';\r\n\r\nimport './WeatherItem.css';\r\n\r\nconst WeatherItem = ({ itemWeather }) => {\r\n\tconst {\r\n\t\tdt,\r\n\t\ttemp,\r\n\t\tweather: [{ main }],\r\n\t} = itemWeather;\r\n\r\n\tconst weatherImg = getProperImage(main.toLowerCase());\r\n\tconst formatedHour = formatTimeFromUnix(dt);\r\n\r\n\treturn (\r\n\t\t<div className='weather-item'>\r\n\t\t\t<p className='weather-item__text'>{formatedHour}</p>\r\n\t\t\t<img className='weather-item__img' src={weatherImg} alt={main} />\r\n\t\t\t<p className='weather-item__text'>{temp.toFixed()}&#176;</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nWeatherItem.propTypes = {\r\n\titemWeather: PropTypes.object,\r\n};\r\n\r\nexport default WeatherItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport WeatherItem from '../WeatherItem/WeatherItem';\r\n\r\nimport './WeatherHourly.css';\r\n\r\nconst WeatherHourly = ({ hourlyWeather }) => {\r\n\tconst handleRightScroll = () => {\r\n\t\tconst outerWrapper = document.querySelector('.hourly-weather-section');\r\n\t\tconst innerWrapper = document.querySelector('.hourly-weather-section__container');\r\n\t\tconst item = document.querySelector('.weather-item');\r\n\t\tconst buttonLeft = document.querySelector('.hourly-weather-section__button--left');\r\n\t\tconst buttonRight = document.querySelector('.hourly-weather-section__button--right');\r\n\r\n\t\tconst fromLeft = innerWrapper.offsetLeft;\r\n\t\tconst currentMovedWidth =\r\n\t\t\touterWrapper.getBoundingClientRect().width + innerWrapper.offsetLeft * -1;\r\n\t\tconst innerWrapperWidth = innerWrapper.offsetWidth;\r\n\t\tconst itemWidth = item.clientWidth;\r\n\t\tconst maxFromLeftPosition = -(\r\n\t\t\tinnerWrapper.offsetWidth - outerWrapper.getBoundingClientRect().width\r\n\t\t);\r\n\r\n\t\tif (fromLeft - itemWidth < 0) {\r\n\t\t\tbuttonLeft.style.display = 'block';\r\n\t\t}\r\n\r\n\t\tif (currentMovedWidth + itemWidth >= innerWrapperWidth) {\r\n\t\t\tbuttonRight.style.display = 'none';\r\n\t\t\tinnerWrapper.style.left = `${maxFromLeftPosition}px`;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tinnerWrapper.style.left = `${fromLeft - itemWidth}px`;\r\n\t};\r\n\r\n\tconst handleLeftScroll = () => {\r\n\t\tconst outerWrapper = document.querySelector('.hourly-weather-section');\r\n\t\tconst innerWrapper = document.querySelector('.hourly-weather-section__container');\r\n\t\tconst item = document.querySelector('.weather-item');\r\n\t\tconst buttonLeft = document.querySelector('.hourly-weather-section__button--left');\r\n\t\tconst buttonRight = document.querySelector('.hourly-weather-section__button--right');\r\n\r\n\t\tconst fromLeft = innerWrapper.offsetLeft;\r\n\t\tconst itemWidth = item.clientWidth;\r\n\t\tconst maxFromLeftPosition = -(\r\n\t\t\tinnerWrapper.offsetWidth - outerWrapper.getBoundingClientRect().width\r\n\t\t);\r\n\r\n\t\tif (fromLeft + itemWidth >= 0) {\r\n\t\t\tbuttonLeft.style.display = 'none';\r\n\t\t\tinnerWrapper.style.left = '0px';\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (fromLeft + itemWidth > maxFromLeftPosition) {\r\n\t\t\tbuttonRight.style.display = 'block';\r\n\t\t}\r\n\r\n\t\tinnerWrapper.style.left = `${fromLeft + itemWidth}px`;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='hourly-weather-section'>\r\n\t\t\t<button\r\n\t\t\t\tclassName='hourly-weather-section__button hourly-weather-section__button--left'\r\n\t\t\t\tonClick={handleLeftScroll}\r\n\t\t\t>\r\n\t\t\t\t<i className='fas fa-angle-left'></i>\r\n\t\t\t</button>\r\n\t\t\t<div className='hourly-weather-section__container'>\r\n\t\t\t\t{hourlyWeather &&\r\n\t\t\t\t\thourlyWeather.map((itemWeather, id) => (\r\n\t\t\t\t\t\t<WeatherItem key={id} itemWeather={itemWeather} />\r\n\t\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<button\r\n\t\t\t\tclassName='hourly-weather-section__button hourly-weather-section__button--right'\r\n\t\t\t\tonClick={handleRightScroll}\r\n\t\t\t>\r\n\t\t\t\t<i className='fas fa-angle-right'></i>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nWeatherHourly.propTypes = {\r\n\thourlyWeather: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default WeatherHourly;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Container from '../Container/Container';\r\nimport WeatherHourly from '../WeatherHourly/WeatherHourly';\r\n\r\nimport { getProperImage } from '../../utils/getImage';\r\n\r\nimport './WeatherSection.css';\r\n\r\nconst WeatherSection = ({\r\n\tconditions,\r\n\tmax,\r\n\tmin,\r\n\ttemp,\r\n\tsunrise,\r\n\tsunset,\r\n\tweather,\r\n\thourlyWeather,\r\n}) => {\r\n\tconst weatherImg = getProperImage(conditions, sunrise, sunset);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<div className='weather-section'>\r\n\t\t\t\t<img className='weather-section__img' src={weatherImg} alt={conditions} />\r\n\t\t\t\t<p className='weather-section__text'>{weather}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className='weather-section weather-section--grow'>\r\n\t\t\t\t<div className='weather-section__container'>\r\n\t\t\t\t\t<p className='weather-section__main-temp'>{temp}&#176;</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='weather-section__container'>\r\n\t\t\t\t\t<p className='weather-section__aside-temp'>\r\n\t\t\t\t\t\t<span>Max: </span>\r\n\t\t\t\t\t\t{max}&#176; C\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p className='weather-section__aside-temp weather-section__aside-temp--border-top'>\r\n\t\t\t\t\t\t<span>Min: </span>\r\n\t\t\t\t\t\t{min}&#176; C\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<WeatherHourly hourlyWeather={hourlyWeather} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nWeatherSection.propTypes = {\r\n\tconditions: PropTypes.string,\r\n\tmax: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\tmin: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\ttemp: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\tsunrise: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\tsunset: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\tweather: PropTypes.string,\r\n\thourlyWeather: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default WeatherSection;\r\n","import { isDay } from './isDay';\r\n\r\nconst mistConditions = ['mist', 'smoke', 'haze', 'fog', 'squall'];\r\nconst sandConditions = ['sand', 'dust'];\r\nconst rainConditions = ['rain', 'drizzle'];\r\n\r\nexport const getProperCondition = (conditon, sunrise, sunset) => {\r\n\tif (mistConditions.includes(conditon)) {\r\n\t\treturn 'mist';\r\n\t} else if (sandConditions.includes(conditon)) {\r\n\t\treturn 'sand';\r\n\t} else if (rainConditions.includes(conditon)) {\r\n\t\treturn 'rain';\r\n\t} else if (conditon === 'clear') {\r\n\t\treturn isDay(sunrise, sunset) ? 'clearDay' : 'clearNight';\r\n\t} else {\r\n\t\treturn conditon;\r\n\t}\r\n};\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport AlertsPage from '../AlertsPage/AlertsPage';\nimport DetailsPage from '../DetailsPage/DetailsPage';\nimport Footer from '../Footer/Footer';\nimport Header from '../Header/Header';\nimport Nav from '../Nav/Nav';\nimport PollutionPage from '../PollutionPage/PollutionPage';\nimport Searchbar from '../Searchbar/Searchbar';\nimport SideMenu from '../SideMenu/SideMenu';\nimport WeatherSection from '../WeatherSection/WeatherSection';\n\n// import { ThemeContext, colors } from '../../context/themeContext';\nimport { fetchWeather, fetchWeatherHourly } from '../../utils/fetch';\nimport { getProperCondition } from '../../utils/getProperConditon';\n\nimport './App.css';\n\nclass App extends Component {\n\t//TODO1: add debouce to reduce input onchange refresh, minimize child re-renders\n\t//TODO2: add theme to switch for dark mode\n\t//TODO3: add setting to change units and adding favourite cities\n\tstate = {\n\t\tvalue: '',\n\t\ttemp: '',\n\t\thumidity: '',\n\t\tmaxTemp: '',\n\t\tminTemp: '',\n\t\tpressure: '',\n\t\twind: '',\n\t\tconditions: '',\n\t\tconditionsDescription: '',\n\t\tcity: '',\n\t\tcloudy: '',\n\t\tsunrise: '',\n\t\tsunset: '',\n\t\terr: false,\n\t\terrMessage: '',\n\t\tlat: '',\n\t\tlng: '',\n\t\tisLoading: false,\n\t\thourlyWeather: null,\n\t\tfavouriteCities: null,\n\t};\n\n\thandleInputChange = (e) => {\n\t\tconst { value } = e.target;\n\t\tthis.setState({ value });\n\t};\n\n\thandleFavouriteCitiesChange = (favouriteCities) => {\n\t\tthis.setState({ favouriteCities });\n\t};\n\n\thandleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tthis.getWeather(this.state.value);\n\t};\n\n\tgetWeather = async (location, lat, lng) => {\n\t\tthis.setState({ isLoading: true });\n\t\ttry {\n\t\t\tconst weatherData = await fetchWeather(location, lat, lng);\n\n\t\t\tif (weatherData) {\n\t\t\t\tconst {\n\t\t\t\t\tclouds: { all: cloudy },\n\t\t\t\t\tcoord: { lon: lng, lat },\n\t\t\t\t\tmain: { temp, temp_max, temp_min, humidity, pressure },\n\t\t\t\t\tname: city,\n\t\t\t\t\tsys: { sunrise, sunset },\n\t\t\t\t\twind: { speed },\n\t\t\t\t\tweather: [{ main, description }],\n\t\t\t\t} = weatherData;\n\n\t\t\t\tthis.setState({\n\t\t\t\t\ttemp: Number(temp.toFixed()),\n\t\t\t\t\tmaxTemp: Number(temp_max.toFixed()),\n\t\t\t\t\tminTemp: Number(temp_min.toFixed()),\n\t\t\t\t\tcity,\n\t\t\t\t\thumidity,\n\t\t\t\t\tpressure,\n\t\t\t\t\twind: Number(speed.toFixed()),\n\t\t\t\t\tconditions: main.toLowerCase(),\n\t\t\t\t\tconditionsDescription: description,\n\t\t\t\t\tcloudy,\n\t\t\t\t\tsunrise,\n\t\t\t\t\tsunset,\n\t\t\t\t\tlng,\n\t\t\t\t\tlat,\n\t\t\t\t\terr: false,\n\t\t\t\t\terrMessage: '',\n\t\t\t\t\twidth: null,\n\t\t\t\t\thourlyWeather: null,\n\t\t\t\t});\n\n\t\t\t\tconst hourlyWeatherData = await fetchWeatherHourly(\n\t\t\t\t\tweatherData.coord.lat,\n\t\t\t\t\tweatherData.coord.lon\n\t\t\t\t);\n\n\t\t\t\tthis.setState({ isLoading: false });\n\n\t\t\t\tif (hourlyWeatherData) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\thourlyWeather: hourlyWeatherData,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.setState({ err: true, errMessage: e.message, isLoading: false });\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\tnavigator.geolocation.getCurrentPosition((position) => {\n\t\t\tthis.getWeather(undefined, position.coords.latitude, position.coords.longitude);\n\t\t});\n\t\tconst favouriteCities = JSON.parse(localStorage.getItem('cities'));\n\n\t\tif (favouriteCities) {\n\t\t\tthis.handleFavouriteCitiesChange(favouriteCities);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tcity,\n\t\t\tconditions,\n\t\t\tcloudy,\n\t\t\t// err,\n\t\t\terrMessage,\n\t\t\thumidity,\n\t\t\tlat,\n\t\t\tlng,\n\t\t\tmaxTemp,\n\t\t\tminTemp,\n\t\t\tpressure,\n\t\t\tsunrise,\n\t\t\tsunset,\n\t\t\ttemp,\n\t\t\tvalue,\n\t\t\twind,\n\t\t\tisLoading,\n\t\t\thourlyWeather,\n\t\t\tfavouriteCities,\n\t\t} = this.state;\n\n\t\tconsole.log(favouriteCities);\n\n\t\tconst properCondition = getProperCondition(conditions, sunrise, sunset);\n\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t{/* <ThemeContext.Provider value={theme}> */}\n\t\t\t\t<div className='background-container'>\n\t\t\t\t\t<SideMenu\n\t\t\t\t\t\tfavouriteCities={favouriteCities}\n\t\t\t\t\t\tgetWeather={this.getWeather}\n\t\t\t\t\t\thandleFavouriteCitiesChange={this.handleFavouriteCitiesChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='backdrop'>\n\t\t\t\t\t\t<div className={`app-container ${properCondition}`}>\n\t\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\t\tcity={city}\n\t\t\t\t\t\t\t\terr={errMessage}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tlat={lat}\n\t\t\t\t\t\t\t\tlng={lng}\n\t\t\t\t\t\t\t\thandleFavouriteCitiesChange={this.handleFavouriteCitiesChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Searchbar\n\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath='/'\n\t\t\t\t\t\t\t\tcomponent={() => (\n\t\t\t\t\t\t\t\t\t<WeatherSection\n\t\t\t\t\t\t\t\t\t\tconditions={properCondition}\n\t\t\t\t\t\t\t\t\t\tweather={conditions}\n\t\t\t\t\t\t\t\t\t\ttemp={temp}\n\t\t\t\t\t\t\t\t\t\tmax={maxTemp}\n\t\t\t\t\t\t\t\t\t\tmin={minTemp}\n\t\t\t\t\t\t\t\t\t\tsunrise={sunrise}\n\t\t\t\t\t\t\t\t\t\tsunset={sunset}\n\t\t\t\t\t\t\t\t\t\thourlyWeather={hourlyWeather}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath='/details'\n\t\t\t\t\t\t\t\tcomponent={() => (\n\t\t\t\t\t\t\t\t\t<DetailsPage\n\t\t\t\t\t\t\t\t\t\tcloudy={cloudy}\n\t\t\t\t\t\t\t\t\t\thumidity={humidity}\n\t\t\t\t\t\t\t\t\t\tpressure={pressure}\n\t\t\t\t\t\t\t\t\t\tsunrise={sunrise}\n\t\t\t\t\t\t\t\t\t\tsunset={sunset}\n\t\t\t\t\t\t\t\t\t\twind={wind}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route path='/alerts' component={() => <AlertsPage lat={lat} lng={lng} />} />\n\t\t\t\t\t\t\t<Route path='/pollution' component={() => <PollutionPage />} />\n\t\t\t\t\t\t\t<Nav properCondition={properCondition} />\n\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/* </ThemeContext.Provider> */}\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}